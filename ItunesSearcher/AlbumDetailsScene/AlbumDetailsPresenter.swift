//
//  AlbumDetailsPresenter.swift
//  ItunesSearcher
//
//  Created by Михаил Звягинцев on 26.10.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AlbumDetailsPresentationLogic {
    func presentAlbumDetails(response: AlbumDetails.ShowAlbumDetails.Response)
    func presentAlert(error: Error)
    func presentDefaultImage()
    func presentImage(imageData: Data)
}

class AlbumDetailsPresenter: AlbumDetailsPresentationLogic
{
    weak var viewController: AlbumDetailsDisplayLogic?

    func presentDefaultImage() {
        viewController?.displayDefaultImage()
    }

    func presentImage(imageData: Data) {
        viewController?.displayAlbumImage(imageData: imageData)
    }

    func presentAlert(error: Error) {
        viewController?.displayAlert(with: error.localizedDescription)
    }

    func presentAlbumDetails(response: AlbumDetails.ShowAlbumDetails.Response) {
        let details = response.albumDetails.results
        let title = details.first?.collectionName?.capitalized ?? "Unknow album"
        let artist = details.first?.artistName?.capitalized ?? "Artist"
        let genre = details.first?.primaryGenreName?.capitalized ?? ""
        let release = details.first?.releaseDate?.getReleaseYear() ?? ""
        let imageURL = details.first?.artworkUrl100 ?? ""
        var songs = details.compactMap{$0.trackName}
        for index in songs.indices {
            songs[index] = "\(index + 1). \(songs[index].capitalized)"
        }
        let viewModel = AlbumDetails.ShowAlbumDetails.ViewModel(imageURL: imageURL,
                                                                albumTitle: title,
                                                                artist: artist,
                                                                details: genre + " " + release,
                                                                songs: songs)
        viewController?.displayAlbumDetails(viewModel: viewModel)
    }
}
